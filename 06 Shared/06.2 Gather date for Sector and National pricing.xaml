<Activity mc:Ignorable="sap sap2010 sads" x:Class="_06_2_Gather_date_for_Sector_and_National_pricing"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_SectorLatestDate" Type="OutArgument(x:String)" />
    <x:Property Name="out_NationalLatestDate" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>_06_2_Gather_date_for_Sector_and_National_pricing_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="06.2 Gather date for Sector and National pricing" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="Data\IFCS Price update.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="sectorPricingDT" />
              <Variable x:TypeArguments="ui:GenericValue" Name="D" />
              <Variable x:TypeArguments="ui:GenericValue" Name="dateFound" />
              <Variable x:TypeArguments="x:Int32" Name="columnNumber" />
              <Variable x:TypeArguments="x:String" Name="columnName" />
              <Variable x:TypeArguments="ui:GenericValue" Name="nextColumnNumber" />
              <Variable x:TypeArguments="x:String" Name="columnName2" />
              <Variable x:TypeArguments="ui:GenericValue" Name="cellValue" />
              <Variable x:TypeArguments="ui:GenericValue" Name="nextCellValue" />
              <Variable x:TypeArguments="ui:GenericValue" Name="itemFound" />
            </Sequence.Variables>
            <Sequence DisplayName="Sector pricing date" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[columnNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">100</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[itemFound]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">[false]</InArgument>
                </Assign.Value>
              </Assign>
              <While DisplayName="Find last date" sap2010:WorkflowViewState.IdRef="While_1" Condition="[itemFound=false]">
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ui:GenericValue">[nextColumnNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ui:GenericValue">[columnNumber+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[columnName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[columnName2]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[columnNumber]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnName]</OutArgument>
                    </ui:InvokeCode.Arguments>
                  </ui:InvokeCode>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[nextColumnNumber]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnName2]</OutArgument>
                    </ui:InvokeCode.Arguments>
                  </ui:InvokeCode>
                  <ui:ExcelReadCell Cell="[columnName+&quot;3&quot;]" DisplayName="Read  current Cell" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="IFCS Sector price">
                    <ui:ExcelReadCell.Result>
                      <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                    </ui:ExcelReadCell.Result>
                  </ui:ExcelReadCell>
                  <ui:ExcelReadCell Cell="[columnName2+&quot;3&quot;]" DisplayName="Read next Cell" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="IFCS Sector price">
                    <ui:ExcelReadCell.Result>
                      <OutArgument x:TypeArguments="ui:GenericValue">[nextCellValue]</OutArgument>
                    </ui:ExcelReadCell.Result>
                  </ui:ExcelReadCell>
                  <If Condition="[Not String.IsNullOrEmpty(cellValue) AND String.IsNullOrEmpty(nextCellValue)]" sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Then>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:GenericValue">[dateFound]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:GenericValue">[cellValue]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:GenericValue">[itemFound]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                  </If>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[columnNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[columnNumber+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </While>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_SectorLatestDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[dateFound.Split(" "c)(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Date Found: &quot;+ out_SectorLatestDate]" />
            </Sequence>
            <Sequence DisplayName="National pricing date" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[columnNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">100</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                <Assign.To>
                  <OutArgument x:TypeArguments="ui:GenericValue">[itemFound]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="ui:GenericValue">[false]</InArgument>
                </Assign.Value>
              </Assign>
              <While DisplayName="Find last date" sap2010:WorkflowViewState.IdRef="While_2" Condition="[itemFound=false]">
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ui:GenericValue">[nextColumnNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ui:GenericValue">[columnNumber+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[columnName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[columnName2]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[columnNumber]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnName]</OutArgument>
                    </ui:InvokeCode.Arguments>
                  </ui:InvokeCode>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[nextColumnNumber]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnName2]</OutArgument>
                    </ui:InvokeCode.Arguments>
                  </ui:InvokeCode>
                  <ui:ExcelReadCell Cell="[columnName+&quot;1&quot;]" DisplayName="Read  current Cell" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="IFCS National Price">
                    <ui:ExcelReadCell.Result>
                      <OutArgument x:TypeArguments="ui:GenericValue">[cellValue]</OutArgument>
                    </ui:ExcelReadCell.Result>
                  </ui:ExcelReadCell>
                  <ui:ExcelReadCell Cell="[columnName2+&quot;1&quot;]" DisplayName="Read next Cell" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="IFCS National Price">
                    <ui:ExcelReadCell.Result>
                      <OutArgument x:TypeArguments="ui:GenericValue">[nextCellValue]</OutArgument>
                    </ui:ExcelReadCell.Result>
                  </ui:ExcelReadCell>
                  <If Condition="[Not String.IsNullOrEmpty(cellValue) AND String.IsNullOrEmpty(nextCellValue)]" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Then>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:GenericValue">[dateFound]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:GenericValue">[cellValue]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:GenericValue">[itemFound]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:GenericValue">[True]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                  </If>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[columnNumber]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[columnNumber+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </While>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[out_NationalLatestDate]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[dateFound.Split(" "c)(0)]</InArgument>
                </Assign.Value>
              </Assign>
              <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[&quot;Date Found: &quot;+ out_NationalLatestDate]" />
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:CommentOut DisplayName="Comment Out">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities">
          <If Condition="[NOT out_NationalLatestDate= out_SectorLatestDate]" DisplayName="If dates dont match" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Throw Exception="[new Exception(&quot;Sector and National Dates donot match: Sector Date =&gt; &quot;+out_SectorLatestDate+&quot;, National Date =&gt; &quot;+ out_NationalLatestDate)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </If.Then>
          </If>
          <sap2010:WorkflowViewState.IdRef>Sequence_10</sap2010:WorkflowViewState.IdRef>
        </Sequence>
      </ui:CommentOut.Body>
      <sap2010:WorkflowViewState.IdRef>CommentOut_2</sap2010:WorkflowViewState.IdRef>
    </ui:CommentOut>
    <sads:DebugSymbol.Symbol>d35DOlxVc2Vyc1xub2VsLm1vcnJpc1xEb2N1bWVudHNcVWlQYXRoXElGQ1MtUHJpY2luZ1Byb2ZpbGVFbnRyeVwwNiBTaGFyZWRcMDYuMiBHYXRoZXIgZGF0ZSBmb3IgU2VjdG9yIGFuZCBOYXRpb25hbCBwcmljaW5nLnhhbWxpSgPOAg4CAQFLBb8CIAIBA8ACBcwCFQIBAkugAUu9AQMBkQFRC7wCFgIBBF4NzAEYAgFLzQENuwIYAgEFXw9mGAMBjQFnD24YAwGJAW8PwgEXAgFTwwEPygEYAgFPywEPywGbAQIBTM4BD9UBGAIBR9YBD90BGAIBQ94BD7ECFwIBDbICD7kCGAIBCboCD7oCnQECAQZkOWQ8AwGQAWE6YUgDAY4BbEFsSAMBjAFpQmlNAwGKAXARwQEcAgFVb2dvegIBVMgBOsgBVAIBUsUBO8UBUQIBUMsBZssBmAECAU3TATnTATwCAUrQATrQAUgCAUjbAUHbAUgCAUbYAULYAU0CAUTfARGwAhwCAQ/eAWfeAXoCAQ63Ajq3AlQCAQy0Aju0AlMCAQq6Ama6ApoBAgEHcRN4HAMBhAF5E4IBHAMBgAGDAROMARwCAXyNAROSASMCAXeTAROYASMCAXOZAROdASYCAW2eAROiASYCAWejARO4ARgCAVu5ARPAARwCAVbgARPnARwCAT7oARPxARwCATryARP7ARwCATb8AROBAiMCATGCAhOHAiMCAS2IAhOMAiYCASeNAhORAiYCASGSAhOnAhgCARWoAhOvAhwCARB2RXZVAwGHAXNGc1gDAYUBfxl/SAMBgwF7P3tLAwGBAYkBGYkBSAIBf4UBP4UBTAIBfZABUZABXQIBeo8BTo8BXAIBeJYBUZYBXgIBdZUBTpUBYAIBdJkBKpkBRgIBcZsBRpsBUQIBb5kBpAGZAbcBAgFungEqngFHAgFroAFGoAFVAgFpngGhAZ4BtAECAWijASGjAXACAVylARe2ASICAV2+AT2+AU0CAVm7AT67AUwCAVflAUXlAVUCAUHiAUbiAVgCAT/uARnuAUgCAT3qAT/qAUsCATv4ARn4AUgCATn0AT/0AUwCATf/AVH/AV0CATT+AU7+AVwCATKFAlGFAl4CAS+EAk6EAmACAS6IAiqIAkYCASuKAkaKAlECASmIAqQBiAK5AQIBKI0CKo0CRwIBJY8CRo8CVQIBI40CoQGNArYBAgEikgIhkgJwAgEWlAIXpQIiAgEXrQI9rQJNAgETqgI+qgJMAgERpgEZrQEiAgFirgEZtQEiAgFelQIZnAIiAgEcnQIZpAIiAgEYqwFLqwFWAgFlqAFMqAFXAgFjswFLswFRAgFhsAFMsAFXAgFfmgJLmgJWAgEflwJMlwJXAgEdogJLogJRAgEbnwJMnwJXAgEZ</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="InvokeCode_1" sap:VirtualizedContainerService.HintSize="464,164">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeCode_2" sap:VirtualizedContainerService.HintSize="464,164">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadCell_1" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_2" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,434" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="486,1564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="512,1724">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="534,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="512,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="512,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="InvokeCode_3" sap:VirtualizedContainerService.HintSize="464,164">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeCode_4" sap:VirtualizedContainerService.HintSize="464,164">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadCell_3" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_4" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,433" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="486,1563">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="512,1722">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="512,60" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="512,62" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="534,2248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="556,2464">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,209" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="486,333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_2" sap:VirtualizedContainerService.HintSize="200,52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="222,268">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="_06_2_Gather_date_for_Sector_and_National_pricing_1" sap:VirtualizedContainerService.HintSize="262,348" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>