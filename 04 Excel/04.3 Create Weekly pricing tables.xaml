<Activity mc:Ignorable="sap sap2010" x:Class="_04_3_Create_Weekly_pricing_table" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_dtWeeklyPricing" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1537.33333333333,4514.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>_04_3_Create_Weekly_pricing_table_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="04.3 Create Weekly pricing table" sap:VirtualizedContainerService.HintSize="698.666666666667,4450" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="columnCounter" />
      <Variable x:TypeArguments="x:String" Name="columnStart" />
      <Variable x:TypeArguments="x:String" Name="columnEnd" />
      <Variable x:TypeArguments="x:String" Name="startDate" />
      <Variable x:TypeArguments="x:String" Name="previousDate" />
      <Variable x:TypeArguments="sd:DataTable" Name="wkpDT" />
      <Variable x:TypeArguments="x:String" Name="columnStartNext" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="656.666666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Creating weekly pricing table - Start&quot;]" />
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="656.666666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_13">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="284,161.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_45">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Old way" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_23">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Find start and end table" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="endOfTables" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[columnCounter]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">330</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[endOfTables]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[columnStart]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[columnEnd]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[columnStartNext]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </Assign.Value>
              </Assign>
              <While DisplayName="Find start and End columns" sap:VirtualizedContainerService.HintSize="242,52" sap2010:WorkflowViewState.IdRef="While_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <While.Condition>[Not endOfTables]</While.Condition>
                <Sequence DisplayName="Find end" sap:VirtualizedContainerService.HintSize="336,938" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="columnName" />
                    <Variable x:TypeArguments="ui:GenericValue" Name="cell1" />
                    <Variable x:TypeArguments="ui:GenericValue" Name="cell2" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[columnCounter]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnName]</OutArgument>
                    </ui:InvokeCode.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeCode>
                  <ui:ReadCell Cell="[columnName+&quot;4&quot;]" DisplayName="Read Cell1" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="ReadCell_1" SheetName="IFCS Weekly price " WorkbookPath="Data\IFCS Price update.xlsx">
                    <ui:ReadCell.Result>
                      <OutArgument x:TypeArguments="ui:GenericValue">[cell1]</OutArgument>
                    </ui:ReadCell.Result>
                  </ui:ReadCell>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[(columnCounter+1)]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnName]</OutArgument>
                    </ui:InvokeCode.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeCode>
                  <ui:ReadCell Cell="[columnName+&quot;4&quot;]" DisplayName="Read Cell2" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="ReadCell_2" SheetName="IFCS Weekly price " WorkbookPath="Data\IFCS Price update.xlsx">
                    <ui:ReadCell.Result>
                      <OutArgument x:TypeArguments="ui:GenericValue">[cell2]</OutArgument>
                    </ui:ReadCell.Result>
                  </ui:ReadCell>
                  <If Condition="[string.IsNullOrEmpty(cell1 ) AND string.IsNullOrEmpty(cell2)]" DisplayName="If both cells are empty" sap:VirtualizedContainerService.HintSize="314,52" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Set values break loop" sap:VirtualizedContainerService.HintSize="336,1096" sap2010:WorkflowViewState.IdRef="Sequence_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign " sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[endOfTables]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[columnStart]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[(columnCounter-2).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column start name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
                          <ui:InvokeCode.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[cint(columnStart)]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnStart]</OutArgument>
                          </ui:InvokeCode.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeCode>
                        <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[columnEnd]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[(columnCounter-1).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column end name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
                          <ui:InvokeCode.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[cint(columnEnd)]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnEnd]</OutArgument>
                          </ui:InvokeCode.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeCode>
                        <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[columnStartNext]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[(columnCounter+1).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column end name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_10">
                          <ui:InvokeCode.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[cint(columnStartNext)]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnStartNext]</OutArgument>
                          </ui:InvokeCode.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeCode>
                      </Sequence>
                    </If.Then>
                  </If>
                  <Assign DisplayName="incrment counter" sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[columnCounter]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[columnCounter+1]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </While>
              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;table start: &quot;+columnStart+&quot;, table end: &quot;+ columnEnd]" />
            </Sequence>
            <Delay Duration="[Timespan.FromSeconds(2)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_6" />
            <Sequence DisplayName="Copy and paste table" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="414,409" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="Data\IFCS Price update.xlsx">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Open File" sap:VirtualizedContainerService.HintSize="222,300" sap2010:WorkflowViewState.IdRef="Sequence_6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelCopyPasteRange DestinationCell="[columnStartNext+&quot;3&quot;]" DestinationSheet="IFCS Weekly price " DisplayName="Copy Paste Range" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExcelCopyPasteRange_1" SheetName="IFCS Weekly price " SourceRange="[columnStart+&quot;3:&quot;+ columnEnd+&quot;24&quot;]" />
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="222,176" sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'EXCEL.EXE IFCS'" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="c2073b1f047331da59c3b3f0c8fc4ed4" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='IFCS Price update - Excel' /&gt;">
                              <ui:WindowScope.Body>
                                <ActivityAction x:TypeArguments="x:Object">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="438,1964" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Weekly price tab'" sap:VirtualizedContainerService.HintSize="314,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="53d6e04ae737e3da3451dbd68f73c9ed" Selector="&lt;wnd cls='EXCEL7' title='IFCS Price update' /&gt;&lt;ctrl name='IFCS Price update' role='client' /&gt;&lt;ctrl name='Sheet Navigation Bar' role='client' /&gt;&lt;ctrl name='Sheet Tabs' role='page tab list' /&gt;&lt;ctrl name='IFCS Weekly price ' role='page tab' /&gt;" WaitForReady="INTERACTIVE" />
                                      </ui:Click.Target>
                                    </ui:Click>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="314,52" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="222,176" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'select range edit'" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                            <ui:Click.CursorPosition>
                                              <ui:CursorPosition Position="Center">
                                                <ui:CursorPosition.OffsetX>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetX>
                                                <ui:CursorPosition.OffsetY>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetY>
                                              </ui:CursorPosition>
                                            </ui:Click.CursorPosition>
                                            <ui:Click.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="501540cae832ceb22d478f1e6119005f" Selector="&lt;wnd cls='EXCEL;' /&gt;" TimeoutMS="2000" WaitForReady="INTERACTIVE" />
                                            </ui:Click.Target>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:Click>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="314,68" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                      </ui:Click.Target>
                                    </ui:Click>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="314,52" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="222,176" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'select range edit'" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                            <ui:Click.CursorPosition>
                                              <ui:CursorPosition Position="Center">
                                                <ui:CursorPosition.OffsetX>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetX>
                                                <ui:CursorPosition.OffsetY>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetY>
                                              </ui:CursorPosition>
                                            </ui:Click.CursorPosition>
                                            <ui:Click.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="5cf1336d782a11289809c7afbde32652" Selector="&lt;wnd cls='EXCEL;' /&gt;&lt;wnd aaname='Name Box' cls='ComboBox' ctrlid='13' /&gt;&lt;wnd aaname='Name Box' cls='Edit' ctrlid='1001' /&gt;" TimeoutMS="2000" WaitForReady="INTERACTIVE" />
                                            </ui:Click.Target>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:Click>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Select table range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,134" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="False" SimulateType="False" Text="[columnStart+&quot;3:&quot;+columnEnd+&quot;24&quot;+&quot;[k(enter)]&quot;]">
                                      <ui:TypeInto.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="06796c1ea89f0dad90e8f78e0414960d" Selector="&lt;wnd cls='EXCEL;' /&gt;&lt;wnd aaname='Name*Box' cls='ComboBox' /&gt;&lt;wnd aaname='Name*Box' cls='Edit' /&gt;" TimeoutMS="2000" WaitForReady="INTERACTIVE" />
                                      </ui:TypeInto.Target>
                                    </ui:TypeInto>
                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Copy excel range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="c" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Move right" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="right" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Move right" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="right" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Move right" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="right" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Paste excel range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="v" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Copy excel range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_9" Key="s" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                      <ui:SendHotkey.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                      </ui:SendHotkey.Target>
                                    </ui:SendHotkey>
                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="314,62" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="pasting complete" />
                                  </Sequence>
                                </ActivityAction>
                              </ui:WindowScope.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:WindowScope>
                          </Sequence>
                        </ui:CommentOut.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:CommentOut>
                      <Delay Duration="[Timespan.FromSeconds(2)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_7" />
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
              </ui:ExcelApplicationScope>
            </Sequence>
            <Delay Duration="[Timespan.FromSeconds(2)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_5" />
            <Sequence DisplayName="Create weekly table" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Get new strt column" sap:VirtualizedContainerService.HintSize="436,52" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="Assign ColStart" sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[columnStart]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[(columnCounter).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
                  <ui:InvokeCode.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[cint(columnStart)]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnStart]</OutArgument>
                  </ui:InvokeCode.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeCode>
                <Assign DisplayName="Assign ColEnd" sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[columnEnd]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[(columnCounter+1).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_8">
                  <ui:InvokeCode.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[cint(columnEnd)]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnEnd]</OutArgument>
                  </ui:InvokeCode.Arguments>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:InvokeCode>
              </Sequence>
              <Sequence DisplayName="Create generic table" sap:VirtualizedContainerService.HintSize="436,1369" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Get start and prev date" sap:VirtualizedContainerService.HintSize="414,1153" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="Data\IFCS Price update.xlsx">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Open File" sap:VirtualizedContainerService.HintSize="336,1044" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="s:DateTime" Name="dateValue" />
                          <Variable x:TypeArguments="x:String" Name="lastTableStartColumn" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelReadCell Cell="[columnStart+&quot;3&quot;]" DisplayName="Read Cell wih latest date" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="IFCS Weekly price ">
                          <ui:ExcelReadCell.Result>
                            <OutArgument x:TypeArguments="s:DateTime">[dateValue]</OutArgument>
                          </ui:ExcelReadCell.Result>
                        </ui:ExcelReadCell>
                        <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[startDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[dateValue.ToString("dd/MM/yyyy")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_9">
                          <ui:InvokeCode.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[(columnCounter-3)]</InArgument>
                            <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[lastTableStartColumn]</OutArgument>
                          </ui:InvokeCode.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeCode>
                        <ui:ExcelReadCell Cell="[lastTableStartColumn+&quot;3&quot;]" DisplayName="Read Cell with old date" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_2" SheetName="IFCS Weekly price ">
                          <ui:ExcelReadCell.Result>
                            <OutArgument x:TypeArguments="s:DateTime">[dateValue]</OutArgument>
                          </ui:ExcelReadCell.Result>
                        </ui:ExcelReadCell>
                        <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[previousDate]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[dateValue.ToString("dd/MM/yyyy")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="314,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="436,1410" sap2010:WorkflowViewState.IdRef="Sequence_18">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'EXCEL.EXE IFCS'" sap:VirtualizedContainerService.HintSize="414,1286" sap2010:WorkflowViewState.IdRef="WindowScope_2" InformativeScreenshot="a2f983ffdd6fc7017f8eb17d18c3857b" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='IFCS Price update - Excel' /&gt;">
                                <ui:WindowScope.Body>
                                  <ActivityAction x:TypeArguments="x:Object">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="336,1140" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Delay Duration="[timespan.FromSeconds(1.5)]" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                      <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Weekly price tab'" sap:VirtualizedContainerService.HintSize="314,106" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="49553fbb0dbceeb22dba25fc5b839bd3" Selector="&lt;wnd cls='EXCEL7' title='IFCS Price update' /&gt;&lt;ctrl name='IFCS Price update' role='client' /&gt;&lt;ctrl name='Sheet Navigation Bar' role='client' /&gt;&lt;ctrl name='Sheet Tabs' role='page tab list' /&gt;&lt;ctrl name='IFCS Weekly price ' role='page tab' /&gt;" WaitForReady="INTERACTIVE" />
                                        </ui:Click.Target>
                                      </ui:Click>
                                      <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Select table range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,134" sap2010:WorkflowViewState.IdRef="TypeInto_2" SendWindowMessages="False" SimulateType="False" Text="[columnStart+&quot;3&quot;+&quot;[k(enter)]&quot;]">
                                        <ui:TypeInto.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="06796c1ea89f0dad90e8f78e0414960d" Selector="&lt;wnd aaname='Name Box' cls='ComboBox' /&gt;&lt;wnd aaname='Name Box' cls='Edit' /&gt;" WaitForReady="INTERACTIVE" />
                                        </ui:TypeInto.Target>
                                      </ui:TypeInto>
                                      <Delay Duration="[timespan.FromSeconds(1.5)]" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Copy excel range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_6" Key="c" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:GetFromClipboard DisplayName="Get StartDate Clipboard" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="GetFromClipboard_1" TimeoutMS="5000">
                                        <ui:GetFromClipboard.Result>
                                          <OutArgument x:TypeArguments="x:String">[startDate]</OutArgument>
                                        </ui:GetFromClipboard.Result>
                                      </ui:GetFromClipboard>
                                      <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Select table range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,134" sap2010:WorkflowViewState.IdRef="TypeInto_3" SendWindowMessages="False" SimulateType="False" Text="[lastTableStartColumn+&quot;3&quot;+&quot;[k(enter)]&quot;]">
                                        <ui:TypeInto.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="06796c1ea89f0dad90e8f78e0414960d" Selector="&lt;wnd aaname='Name Box' cls='ComboBox' /&gt;&lt;wnd aaname='Name Box' cls='Edit' /&gt;" WaitForReady="INTERACTIVE" />
                                        </ui:TypeInto.Target>
                                      </ui:TypeInto>
                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Copy excel range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_7" Key="c" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                        <ui:SendHotkey.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                        </ui:SendHotkey.Target>
                                      </ui:SendHotkey>
                                      <ui:GetFromClipboard DisplayName="Get PrevDate Clipboard" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="GetFromClipboard_2" TimeoutMS="5000">
                                        <ui:GetFromClipboard.Result>
                                          <OutArgument x:TypeArguments="x:String">[previousDate]</OutArgument>
                                        </ui:GetFromClipboard.Result>
                                      </ui:GetFromClipboard>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:WindowScope.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:WindowScope>
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Current Date Found =&gt; &quot;+ startDate]" />
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;PRevious Date Found =&gt; &quot;+ previousDate]" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
                <Sequence DisplayName="WKP table" sap:VirtualizedContainerService.HintSize="538,2719" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="ui:GenericValue" Name="startIndex" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="516,642" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                    <TryCatch.Try>
                      <ui:ReadRange AddHeaders="False" DataTable="[wkpDT]" DisplayName="Read Type" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" PreserveFormat="True" Range="B5:C24" SheetName="IFCS Weekly price " WorkbookPath="Data\IFCS Price update.xlsx" />
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,476" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Open file" sap:VirtualizedContainerService.HintSize="336,406" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Delay Duration="[Timespan.FromSeconds(5)]" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Delay_8" />
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Error opening -&gt; Reattemping to open file&quot;]" />
                            <ui:ReadRange AddHeaders="False" DataTable="[wkpDT]" DisplayName="Read Type" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="ReadRange_2" PreserveFormat="True" Range="B5:C24" SheetName="IFCS Weekly price " WorkbookPath="Data\IFCS Price update.xlsx" />
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                  <Assign sap:VirtualizedContainerService.HintSize="516,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[wkpDT.Columns(0).ColumnName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">ComponentType</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="516,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[wkpDT.Columns(1).ColumnName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">ServiceType</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="WKP Price" DataTable="[wkpDT]" DisplayName="Add WKPCell Column" sap:VirtualizedContainerService.HintSize="516,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" MaxLength="100" Unique="False" />
                  <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="WKY Price" DataTable="[wkpDT]" DisplayName="Add WKYCell Column" sap:VirtualizedContainerService.HintSize="516,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_5" MaxLength="100" Unique="False" />
                  <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="CurrentDate" DataTable="[wkpDT]" DisplayName="Add Current Date Column" sap:VirtualizedContainerService.HintSize="516,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3" MaxLength="100" Unique="False" />
                  <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="PreviousDate" DataTable="[wkpDT]" DisplayName="Add Previous Date Column" sap:VirtualizedContainerService.HintSize="516,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_4" MaxLength="100" Unique="False" />
                  <Assign sap:VirtualizedContainerService.HintSize="516,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ui:GenericValue">[startIndex]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ui:GenericValue">[5]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:FilterDataTable DataTable="[wkpDT]" DisplayName="Remove Diesel Z" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="516,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[wkpDT]" SelectColumnsMode="Keep">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["Diesel Z"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:FilterDataTable DataTable="[wkpDT]" DisplayName="Remove N/A records" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="516,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[wkpDT]" SelectColumnsMode="Keep">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["Biodiesel"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">["Z Truckstop"]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="516,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="336,217" sap2010:WorkflowViewState.IdRef="Sequence_16">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Weekly price DT values&quot;]" />
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[wkpDT]" DisplayName="For Each Row Weekly Build " sap:VirtualizedContainerService.HintSize="516,1075" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="486,926" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[row(0).ToString.ToLower.Contains(&quot;biodiesel&quot;)]" DisplayName="Account for removed rows for biodiesel" sap:VirtualizedContainerService.HintSize="464,210" sap2010:WorkflowViewState.IdRef="If_2">
                            <If.Then>
                              <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[startIndex]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:GenericValue">[startIndex+7]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                          </If>
                          <Assign sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row(2)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[columnStart+startIndex]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row(3)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[columnEnd+startIndex]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row("CurrentDate")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[startDate]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row("PreviousDate")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[previousDate]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="464,52" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="336,217" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Row values: &quot;+ String.Join(&quot;,&quot;, row.ItemArray)]" />
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                          <Assign DisplayName="Move to next row" sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[startIndex]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[startIndex+1]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEachRow>
                </Sequence>
              </Sequence>
            </Sequence>
          </Sequence>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <Sequence DisplayName="New way" sap:VirtualizedContainerService.HintSize="656.666666666667,3897.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_44">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Find start and end table" sap:VirtualizedContainerService.HintSize="614.666666666667,2986.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_26">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Boolean" Name="endOfTables" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="572.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_27">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">[columnCounter]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">9</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="572.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_28">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Boolean">[endOfTables]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="572.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_29">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[columnStart]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="572.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_30">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[columnEnd]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign sap:VirtualizedContainerService.HintSize="572.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_31">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[columnStartNext]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <Literal x:TypeArguments="x:String" Value="" />
            </InArgument>
          </Assign.Value>
        </Assign>
        <While DisplayName="Find start and End columns" sap:VirtualizedContainerService.HintSize="572.666666666667,2282" sap2010:WorkflowViewState.IdRef="While_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <While.Condition>[Not endOfTables]</While.Condition>
          <Sequence DisplayName="Find end" sap:VirtualizedContainerService.HintSize="526,2118" sap2010:WorkflowViewState.IdRef="Sequence_25">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="columnName" />
              <Variable x:TypeArguments="ui:GenericValue" Name="cell1" />
              <Variable x:TypeArguments="ui:GenericValue" Name="cell2" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap:VirtualizedContainerService.HintSize="484,164" sap2010:WorkflowViewState.IdRef="InvokeCode_11">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">
                  <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="columnCounter" />
                </InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="outColNam">
                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="columnName" />
                </OutArgument>
              </ui:InvokeCode.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeCode>
            <ui:ReadCell Cell="[columnName+&quot;4&quot;]" DisplayName="Read Cell1" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadCell_3" SheetName="IFCS Weekly price " WorkbookPath="Data\IFCS Price update.xlsx">
              <ui:ReadCell.Result>
                <OutArgument x:TypeArguments="ui:GenericValue">[cell1]</OutArgument>
              </ui:ReadCell.Result>
            </ui:ReadCell>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap:VirtualizedContainerService.HintSize="484,164" sap2010:WorkflowViewState.IdRef="InvokeCode_12">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[(columnCounter+1)]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnName]</OutArgument>
              </ui:InvokeCode.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeCode>
            <ui:ReadCell Cell="[columnName+&quot;4&quot;]" DisplayName="Read Cell2" sap:VirtualizedContainerService.HintSize="484,86.6666666666667" sap2010:WorkflowViewState.IdRef="ReadCell_4" SheetName="IFCS Weekly price " WorkbookPath="Data\IFCS Price update.xlsx">
              <ui:ReadCell.Result>
                <OutArgument x:TypeArguments="ui:GenericValue">[cell2]</OutArgument>
              </ui:ReadCell.Result>
            </ui:ReadCell>
            <If Condition="[string.IsNullOrEmpty(cell1 ) AND string.IsNullOrEmpty(cell2)]" DisplayName="If both cells are empty" sap:VirtualizedContainerService.HintSize="484,1264.66666666667" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Set values break loop" sap:VirtualizedContainerService.HintSize="376,1070" sap2010:WorkflowViewState.IdRef="Sequence_24">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign " sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_32">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[endOfTables]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_33">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[columnStart]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[(columnCounter-2).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column start name" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_13">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[cint(columnStart)]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnStart]</OutArgument>
                    </ui:InvokeCode.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeCode>
                  <Assign sap:VirtualizedContainerService.HintSize="334,62" sap2010:WorkflowViewState.IdRef="Assign_34">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[columnEnd]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[(columnCounter-1).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column end name" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_14">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[cint(columnEnd)]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnEnd]</OutArgument>
                    </ui:InvokeCode.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeCode>
                  <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[columnStartNext]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[(columnCounter+1).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column end name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_15">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[cint(columnStartNext)]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnStartNext]</OutArgument>
                    </ui:InvokeCode.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeCode>
                </Sequence>
              </If.Then>
            </If>
            <Assign DisplayName="incrment counter" sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_36">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[columnCounter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[columnCounter+1]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </While>
        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="572.666666666667,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;table start: &quot;+columnStart+&quot;, table end: &quot;+ columnEnd]" />
      </Sequence>
      <Delay Duration="[Timespan.FromSeconds(2)]" sap:VirtualizedContainerService.HintSize="614.666666666667,22" sap2010:WorkflowViewState.IdRef="Delay_9" />
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="614.666666666667,716.666666666667" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" WorkbookPath="Data\IFCS Price update.xlsx">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="244,608" sap2010:WorkflowViewState.IdRef="Sequence_43">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Copy and Paste new table" sap:VirtualizedContainerService.HintSize="222,52" sap2010:WorkflowViewState.IdRef="Sequence_31">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelCopyPasteRange DestinationCell="[columnStartNext+&quot;3&quot;]" DestinationSheet="IFCS Weekly price " DisplayName="Copy Paste Range" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExcelCopyPasteRange_2" SheetName="IFCS Weekly price " SourceRange="[columnStart+&quot;3:&quot;+ columnEnd+&quot;24&quot;]" />
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="474,176" sap2010:WorkflowViewState.IdRef="Sequence_30">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'EXCEL.EXE IFCS'" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="WindowScope_3" InformativeScreenshot="c2073b1f047331da59c3b3f0c8fc4ed4" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='IFCS Price update - Excel' /&gt;">
                        <ui:WindowScope.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="438,1802" sap2010:WorkflowViewState.IdRef="Sequence_29">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="416,22" sap2010:WorkflowViewState.IdRef="MaximizeWindow_2" />
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Weekly price tab'" sap:VirtualizedContainerService.HintSize="416,106" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="53d6e04ae737e3da3451dbd68f73c9ed" Selector="&lt;wnd cls='EXCEL7' title='IFCS Price update' /&gt;&lt;ctrl name='IFCS Price update' role='client' /&gt;&lt;ctrl name='Sheet Navigation Bar' role='client' /&gt;&lt;ctrl name='Sheet Tabs' role='page tab list' /&gt;&lt;ctrl name='IFCS Weekly price ' role='page tab' /&gt;" WaitForReady="INTERACTIVE" />
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="416,52" sap2010:WorkflowViewState.IdRef="CommentOut_7">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="336,176" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'select range edit'" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="501540cae832ceb22d478f1e6119005f" Selector="&lt;wnd cls='EXCEL;' /&gt;" TimeoutMS="2000" WaitForReady="INTERACTIVE" />
                                      </ui:Click.Target>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:Click>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" sap:VirtualizedContainerService.HintSize="416,68" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="416,52" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="336,176" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'select range edit'" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                      <ui:Click.CursorPosition>
                                        <ui:CursorPosition Position="Center">
                                          <ui:CursorPosition.OffsetX>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetX>
                                          <ui:CursorPosition.OffsetY>
                                            <InArgument x:TypeArguments="x:Int32" />
                                          </ui:CursorPosition.OffsetY>
                                        </ui:CursorPosition>
                                      </ui:Click.CursorPosition>
                                      <ui:Click.Target>
                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="5cf1336d782a11289809c7afbde32652" Selector="&lt;wnd cls='EXCEL;' /&gt;&lt;wnd aaname='Name Box' cls='ComboBox' ctrlid='13' /&gt;&lt;wnd aaname='Name Box' cls='Edit' ctrlid='1001' /&gt;" TimeoutMS="2000" WaitForReady="INTERACTIVE" />
                                      </ui:Click.Target>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:Click>
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Select table range" EmptyField="False" sap:VirtualizedContainerService.HintSize="416,134" sap2010:WorkflowViewState.IdRef="TypeInto_4" SendWindowMessages="False" SimulateType="False" Text="[columnStart+&quot;3:&quot;+columnEnd+&quot;24&quot;+&quot;[k(enter)]&quot;]">
                                <ui:TypeInto.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="06796c1ea89f0dad90e8f78e0414960d" Selector="&lt;wnd cls='EXCEL;' /&gt;&lt;wnd aaname='Name*Box' cls='ComboBox' /&gt;&lt;wnd aaname='Name*Box' cls='Edit' /&gt;" TimeoutMS="2000" WaitForReady="INTERACTIVE" />
                                </ui:TypeInto.Target>
                              </ui:TypeInto>
                              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Copy excel range" EmptyField="False" sap:VirtualizedContainerService.HintSize="416,117" sap2010:WorkflowViewState.IdRef="SendHotkey_10" Key="c" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Move right" EmptyField="False" sap:VirtualizedContainerService.HintSize="416,117" sap2010:WorkflowViewState.IdRef="SendHotkey_11" Key="right" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Move right" EmptyField="False" sap:VirtualizedContainerService.HintSize="416,117" sap2010:WorkflowViewState.IdRef="SendHotkey_12" Key="right" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Move right" EmptyField="False" sap:VirtualizedContainerService.HintSize="416,117" sap2010:WorkflowViewState.IdRef="SendHotkey_13" Key="right" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Paste excel range" EmptyField="False" sap:VirtualizedContainerService.HintSize="416,117" sap2010:WorkflowViewState.IdRef="SendHotkey_14" Key="v" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                              <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Copy excel range" EmptyField="False" sap:VirtualizedContainerService.HintSize="416,117" sap2010:WorkflowViewState.IdRef="SendHotkey_15" Key="s" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                </ui:SendHotkey.Target>
                              </ui:SendHotkey>
                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="416,62" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="pasting complete" />
                            </Sequence>
                          </ActivityAction>
                        </ui:WindowScope.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:WindowScope>
                    </Sequence>
                  </ui:CommentOut.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:CommentOut>
                <Delay Duration="[Timespan.FromSeconds(2)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delay_10" />
              </Sequence>
              <Delay Duration="[Timespan.FromSeconds(2)]" sap:VirtualizedContainerService.HintSize="222,22" sap2010:WorkflowViewState.IdRef="Delay_11" />
              <Sequence DisplayName="Create weekly table" sap:VirtualizedContainerService.HintSize="222,268" sap2010:WorkflowViewState.IdRef="Sequence_42">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Get new strt column" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Sequence_32">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign ColStart" sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[columnStart]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[(columnCounter).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_16">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[cint(columnStart)]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnStart]</OutArgument>
                    </ui:InvokeCode.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeCode>
                  <Assign DisplayName="Assign ColEnd" sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[columnEnd]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[(columnCounter+1).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_17">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[cint(columnEnd)]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[columnEnd]</OutArgument>
                    </ui:InvokeCode.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeCode>
                </Sequence>
                <Sequence DisplayName="Create generic table" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="Sequence_41">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Open File" sap:VirtualizedContainerService.HintSize="538,52" sap2010:WorkflowViewState.IdRef="Sequence_35">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:DateTime" Name="dateValue" />
                      <Variable x:TypeArguments="x:String" Name="lastTableStartColumn" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadCell Cell="[columnStart+&quot;3&quot;]" DisplayName="Read Cell wih latest date" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_3" SheetName="IFCS Weekly price ">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="s:DateTime">[dateValue]</OutArgument>
                      </ui:ExcelReadCell.Result>
                    </ui:ExcelReadCell>
                    <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[startDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[dateValue.ToString("dd/MM/yyyy")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="    Dim dividend As Integer = inColNum&#xA;    Dim columnName As String = String.Empty&#xA;    Dim modulo As Integer&#xA;&#xA;    While dividend &gt; 0&#xA;       modulo = (dividend - 1) Mod 26&#xA;       columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;       dividend = CInt((dividend - modulo) / 26)&#xA;   End While&#xA;   &#xA;   outColNam=columnName" DisplayName="Get excel column name" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_18">
                      <ui:InvokeCode.Arguments>
                        <InArgument x:TypeArguments="x:Int32" x:Key="inColNum">[(columnCounter-3)]</InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="outColNam">[lastTableStartColumn]</OutArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <ui:ExcelReadCell Cell="[lastTableStartColumn+&quot;3&quot;]" DisplayName="Read Cell with old date" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_4" SheetName="IFCS Weekly price ">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="s:DateTime">[dateValue]</OutArgument>
                      </ui:ExcelReadCell.Result>
                    </ui:ExcelReadCell>
                    <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[previousDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[dateValue.ToString("dd/MM/yyyy")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="314,52" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="436,1410" sap2010:WorkflowViewState.IdRef="Sequence_34">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'EXCEL.EXE IFCS'" sap:VirtualizedContainerService.HintSize="414,1286" sap2010:WorkflowViewState.IdRef="WindowScope_4" InformativeScreenshot="a2f983ffdd6fc7017f8eb17d18c3857b" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='IFCS Price update - Excel' /&gt;">
                            <ui:WindowScope.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="336,1140" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Delay Duration="[timespan.FromSeconds(1.5)]" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Delay_12" />
                                  <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'Weekly price tab'" sap:VirtualizedContainerService.HintSize="314,106" sap2010:WorkflowViewState.IdRef="Click_10" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                                    <ui:Click.CursorPosition>
                                      <ui:CursorPosition Position="Center">
                                        <ui:CursorPosition.OffsetX>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetX>
                                        <ui:CursorPosition.OffsetY>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetY>
                                      </ui:CursorPosition>
                                    </ui:Click.CursorPosition>
                                    <ui:Click.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="49553fbb0dbceeb22dba25fc5b839bd3" Selector="&lt;wnd cls='EXCEL7' title='IFCS Price update' /&gt;&lt;ctrl name='IFCS Price update' role='client' /&gt;&lt;ctrl name='Sheet Navigation Bar' role='client' /&gt;&lt;ctrl name='Sheet Tabs' role='page tab list' /&gt;&lt;ctrl name='IFCS Weekly price ' role='page tab' /&gt;" WaitForReady="INTERACTIVE" />
                                    </ui:Click.Target>
                                  </ui:Click>
                                  <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Select table range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,134" sap2010:WorkflowViewState.IdRef="TypeInto_5" SendWindowMessages="False" SimulateType="False" Text="[columnStart+&quot;3&quot;+&quot;[k(enter)]&quot;]">
                                    <ui:TypeInto.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="06796c1ea89f0dad90e8f78e0414960d" Selector="&lt;wnd aaname='Name Box' cls='ComboBox' /&gt;&lt;wnd aaname='Name Box' cls='Edit' /&gt;" WaitForReady="INTERACTIVE" />
                                    </ui:TypeInto.Target>
                                  </ui:TypeInto>
                                  <Delay Duration="[timespan.FromSeconds(1.5)]" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Delay_13" />
                                  <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Copy excel range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_16" Key="c" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                    <ui:SendHotkey.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                    </ui:SendHotkey.Target>
                                  </ui:SendHotkey>
                                  <ui:GetFromClipboard DisplayName="Get StartDate Clipboard" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="GetFromClipboard_3" TimeoutMS="5000">
                                    <ui:GetFromClipboard.Result>
                                      <OutArgument x:TypeArguments="x:String">[startDate]</OutArgument>
                                    </ui:GetFromClipboard.Result>
                                  </ui:GetFromClipboard>
                                  <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Select table range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,134" sap2010:WorkflowViewState.IdRef="TypeInto_6" SendWindowMessages="False" SimulateType="False" Text="[lastTableStartColumn+&quot;3&quot;+&quot;[k(enter)]&quot;]">
                                    <ui:TypeInto.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="06796c1ea89f0dad90e8f78e0414960d" Selector="&lt;wnd aaname='Name Box' cls='ComboBox' /&gt;&lt;wnd aaname='Name Box' cls='Edit' /&gt;" WaitForReady="INTERACTIVE" />
                                    </ui:TypeInto.Target>
                                  </ui:TypeInto>
                                  <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Copy excel range" EmptyField="False" sap:VirtualizedContainerService.HintSize="314,117" sap2010:WorkflowViewState.IdRef="SendHotkey_17" Key="c" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="False">
                                    <ui:SendHotkey.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                    </ui:SendHotkey.Target>
                                  </ui:SendHotkey>
                                  <ui:GetFromClipboard DisplayName="Get PrevDate Clipboard" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="GetFromClipboard_4" TimeoutMS="5000">
                                    <ui:GetFromClipboard.Result>
                                      <OutArgument x:TypeArguments="x:String">[previousDate]</OutArgument>
                                    </ui:GetFromClipboard.Result>
                                  </ui:GetFromClipboard>
                                </Sequence>
                              </ActivityAction>
                            </ui:WindowScope.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:WindowScope>
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Current Date Found =&gt; &quot;+ startDate]" />
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Previous Date Found =&gt; &quot;+ previousDate]" />
                  </Sequence>
                  <Sequence DisplayName="WKP table" sap:VirtualizedContainerService.HintSize="538,2226" sap2010:WorkflowViewState.IdRef="Sequence_40">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="ui:GenericValue" Name="startIndex" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelReadRange AddHeaders="False" DataTable="[wkpDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="516,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="B5:C24" SheetName="IFCS Weekly price " />
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="516,52" sap2010:WorkflowViewState.IdRef="CommentOut_15">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="456,176" sap2010:WorkflowViewState.IdRef="Sequence_47">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="416,289" sap2010:WorkflowViewState.IdRef="CommentOut_14">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="336,211" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ReadRange Range="{x:Null}" SheetName="{x:Null}" AddHeaders="False" DataTable="[wkpDT]" DisplayName="Read Type" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="ReadRange_3" PreserveFormat="True" WorkbookPath="Data\IFCS Price update.xlsx" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="420,22" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Open file" sap:VirtualizedContainerService.HintSize="336,406" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Delay Duration="[Timespan.FromSeconds(5)]" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Delay_14" />
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Error opening -&gt; Reattemping to open file&quot;]" />
                                    <ui:ReadRange AddHeaders="False" DataTable="[wkpDT]" DisplayName="Read Type" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="ReadRange_4" PreserveFormat="True" Range="B5:C24" SheetName="IFCS Weekly price " WorkbookPath="Data\IFCS Price update.xlsx" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                    <Assign sap:VirtualizedContainerService.HintSize="516,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[wkpDT.Columns(0).ColumnName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">ComponentType</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="516,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[wkpDT.Columns(1).ColumnName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">ServiceType</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="WKP Price" DataTable="[wkpDT]" DisplayName="Add WKPCell Column" sap:VirtualizedContainerService.HintSize="516,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_6" MaxLength="100" Unique="False" />
                    <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="WKY Price" DataTable="[wkpDT]" DisplayName="Add WKYCell Column" sap:VirtualizedContainerService.HintSize="516,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_7" MaxLength="100" Unique="False" />
                    <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="CurrentDate" DataTable="[wkpDT]" DisplayName="Add Current Date Column" sap:VirtualizedContainerService.HintSize="516,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_8" MaxLength="100" Unique="False" />
                    <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="PreviousDate" DataTable="[wkpDT]" DisplayName="Add Previous Date Column" sap:VirtualizedContainerService.HintSize="516,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_9" MaxLength="100" Unique="False" />
                    <Assign sap:VirtualizedContainerService.HintSize="516,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:GenericValue">[startIndex]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:GenericValue">[5]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:FilterDataTable DataTable="[wkpDT]" DisplayName="Remove Diesel Z" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="516,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[wkpDT]" SelectColumnsMode="Keep">
                      <ui:FilterDataTable.Filters>
                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                            <ui:FilterOperationArgument.Column>
                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                            </ui:FilterOperationArgument.Column>
                            <ui:FilterOperationArgument.Operand>
                              <InArgument x:TypeArguments="x:String">["Diesel Z"]</InArgument>
                            </ui:FilterOperationArgument.Operand>
                          </ui:FilterOperationArgument>
                        </scg:List>
                      </ui:FilterDataTable.Filters>
                      <ui:FilterDataTable.SelectColumns>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <x:Null />
                        </scg:List>
                      </ui:FilterDataTable.SelectColumns>
                    </ui:FilterDataTable>
                    <ui:FilterDataTable DataTable="[wkpDT]" DisplayName="Remove N/A records" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="516,59" sap2010:WorkflowViewState.IdRef="FilterDataTable_5" OutputDataTable="[wkpDT]" SelectColumnsMode="Keep">
                      <ui:FilterDataTable.Filters>
                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                          <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                            <ui:FilterOperationArgument.Column>
                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                            </ui:FilterOperationArgument.Column>
                            <ui:FilterOperationArgument.Operand>
                              <InArgument x:TypeArguments="x:String">["Biodiesel"]</InArgument>
                            </ui:FilterOperationArgument.Operand>
                          </ui:FilterOperationArgument>
                          <ui:FilterOperationArgument BooleanOperator="And" Operator="NOTCONTAINS">
                            <ui:FilterOperationArgument.Column>
                              <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                            </ui:FilterOperationArgument.Column>
                            <ui:FilterOperationArgument.Operand>
                              <InArgument x:TypeArguments="x:String">["Z Truckstop"]</InArgument>
                            </ui:FilterOperationArgument.Operand>
                          </ui:FilterOperationArgument>
                        </scg:List>
                      </ui:FilterDataTable.Filters>
                      <ui:FilterDataTable.SelectColumns>
                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                          <x:Null />
                        </scg:List>
                      </ui:FilterDataTable.SelectColumns>
                    </ui:FilterDataTable>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="516,52" sap2010:WorkflowViewState.IdRef="CommentOut_11">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="336,217" sap2010:WorkflowViewState.IdRef="Sequence_37">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Weekly price DT values&quot;]" />
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[wkpDT]" DisplayName="For Each Row Weekly Build " sap:VirtualizedContainerService.HintSize="516,1073" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="486,925" sap2010:WorkflowViewState.IdRef="Sequence_39">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[row(0).ToString.ToLower.Contains(&quot;biodiesel&quot;)]" DisplayName="Account for removed rows for biodiesel" sap:VirtualizedContainerService.HintSize="464,209" sap2010:WorkflowViewState.IdRef="If_4">
                              <If.Then>
                                <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:GenericValue">[startIndex]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:GenericValue">[startIndex+7]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                            <Assign sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[row(2)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[columnStart+startIndex]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[row(3)]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[columnEnd+startIndex]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[row("CurrentDate")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[startDate]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[row("PreviousDate")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Object">[previousDate]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="464,52" sap2010:WorkflowViewState.IdRef="CommentOut_12">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="336,217" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,93" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Row values: &quot;+ String.Join(&quot;,&quot;, row.ItemArray)]" />
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <Assign DisplayName="Move to next row" sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:GenericValue">[startIndex]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:GenericValue">[startIndex+1]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ForEachRow>
                  </Sequence>
                </Sequence>
              </Sequence>
              <Delay Duration="[Timespan.FromSeconds(2)]" sap:VirtualizedContainerService.HintSize="222,22" sap2010:WorkflowViewState.IdRef="Delay_15" />
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
    </Sequence>
    <ui:FilterDataTable DataTable="[wkpDT]" DisplayName="output datatable to out_datatable" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="508,58.6666666666667" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[out_dtWeeklyPricing]" SelectColumnsMode="Keep">
      <ui:FilterDataTable.Filters>
        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
          <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
        </scg:List>
      </ui:FilterDataTable.Filters>
      <ui:FilterDataTable.SelectColumns>
        <scg:List x:TypeArguments="InArgument" Capacity="4">
          <x:Null />
        </scg:List>
      </ui:FilterDataTable.SelectColumns>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:FilterDataTable>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="508,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Creating weekly pricing table - End&quot;]" />
  </Sequence>
</Activity>